<!-- GitHub Actions Workflow:

login_with_generated_totp.yml: Workflow for generating TOTP and setting secrets.
Trade_Script_with_DB_and_S3.yml: Workflow for trading scripts that interact with Rupeezy, DynamoDB, and AWS S3.
Authentication:

TOTP-based authentication: Uses the login script to generate access tokens that are stored for use during the trading operations.
Access token handling: The access token is now stored in RUPEEZY_ACCESS_TOKEN as an environment variable without needing the auth.py.
Main Trading Flow:

main.py (and backup main_backup.py):
Contains the main trading logic, which retrieves the RUPEEZY_ACCESS_TOKEN from the environment and interacts with Rupeezy's API for placing orders.
Order placement, status checks, and fetching trade details are performed here.
After successful execution, the data is stored in DynamoDB via db_operations.py.
Trading Logic:

beest_etf.py:
Implements order placement (trigger_order_on_rupeezy), status checking (check_order_status), and fetching trade details (fetch_trade_details).
Uses the token from RUPEEZY_ACCESS_TOKEN to interact with Rupeezy's API.
Database Operations:

db_operations.py:
Handles the database interactions with DynamoDB, inserting executed order details (user ID, instrument ID, quantity, price, etc.).
Supportive Scripts:

chartink_script_test_2.py: You mentioned that this is separate from the Beest flow, focused on a different task. -->